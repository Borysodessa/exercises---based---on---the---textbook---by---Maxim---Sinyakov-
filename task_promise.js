// 20 легких задач по Promise в JavaScript:

//Создайте Promise, который отклоняется с определенным числом после 1 секунды.

//Создайте цепочку из трех промисов, где каждый последующий зависит от результата предыдущего.

//Напишите функцию, которая принимает массив чисел и возвращает Promise с их суммой.

// Создайте функцию, которая принимает число и возвращает Promise, которое разрешается через 1 секунду с удвоенным значением.

// Напишите функцию, которая принимает строку и возвращает Promise, который разрешается через 500 мс с этой строкой в верхнем регистре.

// Создайте Promise, который разрешается через случайное время от 1 до 5 секунд.

//Напишите функцию, которая принимает два числа и возвращает Promise с их произведением.

//Создайте Promise, который разрешается массивом чисел после 3 секунд.

// Напишите функцию, которая принимает число и возвращает Promise, которое отклоняется через 1 секунду с сообщением "Ошибка".

//Создайте функцию, которая принимает массив промисов и возвращает новый промис, который разрешается, когда все промисы в массиве разрешены.

//Напишите функцию, которая принимает время в миллисекундах и возвращает Promise, который разрешается через это время.

//Создайте функцию, которая принимает URL изображения и возвращает Promise, который разрешается, если изображение успешно загружено, и отклоняется в случае ошибки загрузки.

//Создайте функцию, которая принимает массив чисел и возвращает Promise с максимальным значением из массива.

//Напишите функцию, которая принимает строку и возвращает Promise с количеством символов в строке.



//Вот 20 задач среднего уровня по Promise в JavaScript:


//Создайте функцию, которая принимает число и возвращает Promise, который разрешается через случайное время от 1 до 5 секунд.

Напишите функцию, которая делает несколько асинхронных запросов и возвращает Promise с результатом всех запросов.
Создайте функцию, которая принимает массив URL-адресов изображений и возвращает Promise, который разрешается, когда все изображения загружены.
Напишите функцию, которая принимает время в миллисекундах и возвращает Promise, который разрешается через это время.
Создайте функцию, которая принимает массив чисел и возвращает Promise с их средним значением.
Напишите функцию, которая делает запрос к API и возвращает Promise с данными.
Создайте функцию, которая принимает две функции (resolve и reject) и возвращает Promise, который разрешается, если resolve вызывается, и отклоняется, если reject вызывается.
Напишите функцию, которая принимает массив Promise и возвращает новый Promise, который разрешается, когда все переданные Promise разрешены.
Создайте функцию, которая принимает число и возвращает Promise, который разрешается с факториалом этого числа.
Напишите функцию, которая принимает массив строк и возвращает Promise с количеством уникальных строк.
Создайте функцию, которая принимает URL-адрес и возвращает Promise с данными после запроса к этому URL.
Напишите функцию, которая принимает два числа и возвращает Promise с их суммой после задержки в 1 секунду.
Создайте функцию, которая принимает массив чисел и возвращает Promise с их произведением.
Напишите функцию, которая принимает массив URL-адресов и возвращает Promise с данными всех запросов.
Создайте функцию, которая принимает массив чисел и возвращает Promise с максимальным значением из массива.
Напишите функцию, которая принимает число и возвращает Promise, который разрешается только для четных чисел.
Создайте функцию, которая принимает два URL-адреса и возвращает Promise с данными обоих запросов.
Напишите функцию, которая принимает объект с URL-адресами ресурсов и возвращает Promise с данными всех ресурсов после их загрузки.
Создайте функцию, которая делает последовательные запросы к API с использованием данных предыдущего запроса и возвращает Promise с конечным результатом.
Напишите функцию, которая принимает число и возвращает Promise, который разрешается только для простых чисел.

 Вот 20 задач тяжелого уровня по Promise в JavaScript:

Напишите функцию, которая делает последовательные асинхронные запросы к API с использованием Promise и возвращает общий результат.
Создайте функцию, которая реализует механизм повторения выполнения Promise в случае ошибки с заданной задержкой и максимальным количеством попыток.
Реализуйте функцию, которая параллельно делает несколько асинхронных запросов к различным ресурсам и возвращает результат после завершения всех запросов.
Напишите функцию, которая обрабатывает ошибки в цепочке Promise и возвращает специальный Promise с информацией об ошибке.
Создайте функцию, которая обрабатывает зависимые асинхронные операции и возвращает Promise, зависящий от результатов этих операций.
Напишите функцию, которая реализует механизм отмены выполнения Promise после определенного времени.
Разработайте функцию, которая реализует механизм кэширования результатов выполнения Promise для ускорения повторных запросов.
Создайте функцию, которая объединяет результаты нескольких Promise в один общий результат с учетом порядка выполнения.
Напишите функцию, которая реализует механизм трансформации результатов Promise с помощью заданной функции.
Разработайте функцию, которая реализует механизм параллельного выполнения асинхронных операций с возможностью ограничения количества одновременно выполняемых операций.
Создайте функцию, которая реализует механизм повторного выполнения Promise с заданной задержкой и условием продолжения повторений.
Напишите функцию, которая обрабатывает ошибки в цепочке Promise и автоматически повторяет выполнение операции после ошибки с увеличением задержки между попытками.
Разработайте функцию, которая реализует механизм выполнения нескольких асинхронных операций последовательно с передачей результата предыдущей операции в следующую.
Создайте функцию, которая реализует механизм отслеживания прогресса выполнения нескольких параллельных операций и возвращает общий результат после завершения всех операций.
Напишите функцию, которая обрабатывает зависимые асинхронные операции с возможностью отмены выполнения и очередности выполнения операций.
Разработайте функцию, которая реализует механизм сохранения состояния выполнения Promise для возможности продолжения выполнения после перезапуска приложения.
Создайте функцию, которая реализует механизм контроля времени выполнения асинхронной операции и автоматического завершения выполнения после заданного времени.
Напишите функцию, которая обрабатывает зависимые асинхронные операции с возможностью отката изменений при возникновении ошибок в цепочке операций.
Разработайте функцию, которая реализует механизм распараллеливания выполнения нескольких зависимых асинхронных операций для ускорения общего времени выполнения.
Создайте функцию, которая реализует механизм отслеживания завершения выполнения нескольких параллельных операций и возвращает общий результат после завершения всех операций с возможностью отмены выполнения.